// <auto-generated />
using System;
using DbConnectWithCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbConnectWithCore.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("DbConnectWithCore.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ShopCustomersshopcustomerId");

                    b.Property<string>("customerEmail");

                    b.Property<string>("fName");

                    b.Property<string>("lName");

                    b.HasKey("customerId");

                    b.HasIndex("ShopCustomersshopcustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DbConnectWithCore.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("productName");

                    b.Property<int>("shopId");

                    b.HasKey("productId");

                    b.HasIndex("shopId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DbConnectWithCore.Shop", b =>
                {
                    b.Property<int>("shopId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ShopCustomersshopcustomerId");

                    b.Property<string>("shopName");

                    b.Property<int?>("shopRate");

                    b.HasKey("shopId");

                    b.HasIndex("ShopCustomersshopcustomerId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("DbConnectWithCore.ShopCustomer", b =>
                {
                    b.Property<int>("shopcustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("customerId");

                    b.Property<int>("shopId");

                    b.HasKey("shopcustomerId");

                    b.ToTable("ShopCustomers");
                });

            modelBuilder.Entity("DbConnectWithCore.Customer", b =>
                {
                    b.HasOne("DbConnectWithCore.ShopCustomer", "ShopCustomers")
                        .WithMany("Customers")
                        .HasForeignKey("ShopCustomersshopcustomerId");
                });

            modelBuilder.Entity("DbConnectWithCore.Product", b =>
                {
                    b.HasOne("DbConnectWithCore.Shop", "shop")
                        .WithMany("Products")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DbConnectWithCore.Shop", b =>
                {
                    b.HasOne("DbConnectWithCore.ShopCustomer", "ShopCustomers")
                        .WithMany("Shops")
                        .HasForeignKey("ShopCustomersshopcustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
